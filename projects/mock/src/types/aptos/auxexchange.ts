/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

/* Generated modules for account 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541 */

import { aptos } from "@sentio/sdk";
import { Address, MoveModule } from "aptos-sdk/src/generated";

import * as _0x1 from "@sentio/sdk/lib/builtin/aptos/0x1";

export class amm extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("amm", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): amm {
    return new amm({ ...amm.DEFAULT_OPTIONS, ...options });
  }

  onEntryAddApproximateLiquidity(
    func: (
      call: amm.AddApproximateLiquidityPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::add_approximate_liquidity",
    });
    return this;
  }

  onEntryAddExactLiquidity(
    func: (call: amm.AddExactLiquidityPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::add_exact_liquidity",
    });
    return this;
  }

  onEntryAddLiquidity(
    func: (call: amm.AddLiquidityPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::add_liquidity",
    });
    return this;
  }

  onEntryAddLiquidityWithAuxAccount(
    func: (
      call: amm.AddLiquidityWithAuxAccountPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::add_liquidity_with_aux_account",
    });
    return this;
  }

  onEntryCreatePool(
    func: (call: amm.CreatePoolPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::create_pool",
    });
    return this;
  }

  onEntryRemoveLiquidity(
    func: (call: amm.RemoveLiquidityPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::remove_liquidity",
    });
    return this;
  }

  onEntryRemoveLiquidityWithAuxAccount(
    func: (
      call: amm.RemoveLiquidityWithAuxAccountPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::remove_liquidity_with_aux_account",
    });
    return this;
  }

  onEntryResetPool(
    func: (call: amm.ResetPoolPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::reset_pool",
    });
    return this;
  }

  onEntrySwapCoinForExactCoinLimit(
    func: (
      call: amm.SwapCoinForExactCoinLimitPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::swap_coin_for_exact_coin_limit",
    });
    return this;
  }

  onEntrySwapCoinForExactCoinWithSigner(
    func: (
      call: amm.SwapCoinForExactCoinWithSignerPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::swap_coin_for_exact_coin_with_signer",
    });
    return this;
  }

  onEntrySwapExactCoinForCoinLimit(
    func: (
      call: amm.SwapExactCoinForCoinLimitPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::swap_exact_coin_for_coin_limit",
    });
    return this;
  }

  onEntrySwapExactCoinForCoinWithSigner(
    func: (
      call: amm.SwapExactCoinForCoinWithSignerPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::swap_exact_coin_for_coin_with_signer",
    });
    return this;
  }

  onEntryUpdateFee(
    func: (call: amm.UpdateFeePayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): amm {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "amm::update_fee",
    });
    return this;
  }

  onEventSwapEvent(
    func: (event: amm.SwapEventInstance, ctx: aptos.AptosContext) => void
  ): amm {
    this.onEvent(func, {
      type: "amm::SwapEvent",
    });
    return this;
  }

  onEventAddLiquidityEvent(
    func: (
      event: amm.AddLiquidityEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): amm {
    this.onEvent(func, {
      type: "amm::AddLiquidityEvent",
    });
    return this;
  }

  onEventRemoveLiquidityEvent(
    func: (
      event: amm.RemoveLiquidityEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): amm {
    this.onEvent(func, {
      type: "amm::RemoveLiquidityEvent",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace amm {
  export class AddLiquidityEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::AddLiquidityEvent";
    timestamp: bigint;
    x_coin_type: string;
    y_coin_type: string;
    x_added_au: bigint;
    y_added_au: bigint;
    lp_minted_au: bigint;
  }

  export interface AddLiquidityEventInstance
    extends aptos.TypedEventInstance<AddLiquidityEvent> {
    data_typed: AddLiquidityEvent;
    type_arguments: [];
  }

  export class FlashSwap<T0, T1> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::FlashSwap";
    in_au: bigint;
    out_au: bigint;
  }

  export class LP<T0, T1> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::LP";
    dummy_field: Boolean;
  }

  export class Pool<T0, T1> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::Pool";
    frozen: Boolean;
    timestamp: bigint;
    fee_bps: bigint;
    swap_events: _0x1.event.EventHandle<amm.SwapEvent>;
    add_liquidity_events: _0x1.event.EventHandle<amm.AddLiquidityEvent>;
    remove_liquidity_events: _0x1.event.EventHandle<amm.RemoveLiquidityEvent>;
    x_reserve: _0x1.coin.Coin<T0>;
    y_reserve: _0x1.coin.Coin<T1>;
    lp_mint: _0x1.coin.MintCapability<amm.LP<T0, T1>>;
    lp_burn: _0x1.coin.BurnCapability<amm.LP<T0, T1>>;
  }

  export class RemoveLiquidityEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::RemoveLiquidityEvent";
    timestamp: bigint;
    x_coin_type: string;
    y_coin_type: string;
    x_removed_au: bigint;
    y_removed_au: bigint;
    lp_burned_au: bigint;
  }

  export interface RemoveLiquidityEventInstance
    extends aptos.TypedEventInstance<RemoveLiquidityEvent> {
    data_typed: RemoveLiquidityEvent;
    type_arguments: [];
  }

  export class SwapEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::SwapEvent";
    sender_addr: Address;
    timestamp: bigint;
    in_coin_type: string;
    out_coin_type: string;
    in_reserve: bigint;
    out_reserve: bigint;
    in_au: bigint;
    out_au: bigint;
    fee_bps: bigint;
  }

  export interface SwapEventInstance
    extends aptos.TypedEventInstance<SwapEvent> {
    data_typed: SwapEvent;
    type_arguments: [];
  }

  export interface AddApproximateLiquidityPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<
      [bigint, bigint, bigint, bigint, bigint, bigint]
    > {
    arguments_typed: [bigint, bigint, bigint, bigint, bigint, bigint];
    type_arguments: [string, string];
  }

  export interface AddExactLiquidityPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string];
  }

  export interface AddLiquidityPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint];
    type_arguments: [string, string];
  }

  export interface AddLiquidityWithAuxAccountPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint];
    type_arguments: [string, string];
  }

  export interface CreatePoolPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string, string];
  }

  export interface RemoveLiquidityPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string, string];
  }

  export interface RemoveLiquidityWithAuxAccountPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string, string];
  }

  export interface ResetPoolPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [string, string];
  }

  export interface SwapCoinForExactCoinLimitPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint, bigint];
    type_arguments: [string, string];
  }

  export interface SwapCoinForExactCoinWithSignerPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string];
  }

  export interface SwapExactCoinForCoinLimitPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint];
    type_arguments: [string, string];
  }

  export interface SwapExactCoinForCoinWithSignerPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string];
  }

  export interface UpdateFeePayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string, string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"amm","friends":[],"exposed_functions":[{"name":"add_approximate_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64","u128","u64","u64"],"return":[]},{"name":"add_exact_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"add_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64"],"return":[]},{"name":"add_liquidity_with_aux_account","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64"],"return":[]},{"name":"au_in","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"au_out","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"coin_add_approximate_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&mut 0x1::coin::Coin<T0>","&mut 0x1::coin::Coin<T1>","u64","u64","u64","u128","u64","u64"],"return":["0x1::coin::Coin<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::LP<T0, T1>>"]},{"name":"coin_add_exact_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"],"return":["0x1::coin::Coin<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::LP<T0, T1>>"]},{"name":"coin_add_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&mut 0x1::coin::Coin<T0>","&mut 0x1::coin::Coin<T1>","u64"],"return":["0x1::coin::Coin<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::LP<T0, T1>>"]},{"name":"coin_flash_swap","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&mut 0x1::coin::Coin<T1>","u64","u64"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::FlashSwap<T0, T1>"]},{"name":"coin_remove_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::LP<T0, T1>>"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"coin_repay","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","&mut 0x1::coin::Coin<T0>","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::FlashSwap<T0, T1>"],"return":[]},{"name":"create_pool","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"flash_swap","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::FlashSwap<T0, T1>"]},{"name":"pool_exists","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"remove_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"remove_liquidity_with_aux_account","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"repay","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::FlashSwap<T0, T1>"],"return":[]},{"name":"reset_pool","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"swap_coin_for_exact_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","u64","u64","bool","u128","u128"],"return":["0x1::coin::Coin<T1>","0x1::coin::Coin<T0>"]},{"name":"swap_coin_for_exact_coin_limit","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u128","u128","u64"],"return":[]},{"name":"swap_coin_for_exact_coin_mut","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["address","&mut 0x1::coin::Coin<T0>","&mut 0x1::coin::Coin<T1>","u64","u64","bool","u128","u128"],"return":["u64","u64"]},{"name":"swap_coin_for_exact_coin_with_signer","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"swap_exact_coin_for_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","u64","u64","bool","u128","u128"],"return":["0x1::coin::Coin<T1>","0x1::coin::Coin<T0>"]},{"name":"swap_exact_coin_for_coin_limit","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u128","u128"],"return":[]},{"name":"swap_exact_coin_for_coin_mut","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["address","&mut 0x1::coin::Coin<T0>","&mut 0x1::coin::Coin<T1>","u64","u64","bool","u128","u128"],"return":["u64","u64"]},{"name":"swap_exact_coin_for_coin_with_signer","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"update_fee","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"x_au","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"y_au","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]}],"structs":[{"name":"AddLiquidityEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"timestamp","type":"u64"},{"name":"x_coin_type","type":"0x1::string::String"},{"name":"y_coin_type","type":"0x1::string::String"},{"name":"x_added_au","type":"u64"},{"name":"y_added_au","type":"u64"},{"name":"lp_minted_au","type":"u64"}]},{"name":"FlashSwap","is_native":false,"abilities":[],"generic_type_params":[{"constraints":[]},{"constraints":[]}],"fields":[{"name":"in_au","type":"u64"},{"name":"out_au","type":"u64"}]},{"name":"LP","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]}],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"Pool","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]}],"fields":[{"name":"frozen","type":"bool"},{"name":"timestamp","type":"u64"},{"name":"fee_bps","type":"u64"},{"name":"swap_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::SwapEvent>"},{"name":"add_liquidity_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::AddLiquidityEvent>"},{"name":"remove_liquidity_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::RemoveLiquidityEvent>"},{"name":"x_reserve","type":"0x1::coin::Coin<T0>"},{"name":"y_reserve","type":"0x1::coin::Coin<T1>"},{"name":"lp_mint","type":"0x1::coin::MintCapability<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::LP<T0, T1>>"},{"name":"lp_burn","type":"0x1::coin::BurnCapability<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm::LP<T0, T1>>"}]},{"name":"RemoveLiquidityEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"timestamp","type":"u64"},{"name":"x_coin_type","type":"0x1::string::String"},{"name":"y_coin_type","type":"0x1::string::String"},{"name":"x_removed_au","type":"u64"},{"name":"y_removed_au","type":"u64"},{"name":"lp_burned_au","type":"u64"}]},{"name":"SwapEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"sender_addr","type":"address"},{"name":"timestamp","type":"u64"},{"name":"in_coin_type","type":"0x1::string::String"},{"name":"out_coin_type","type":"0x1::string::String"},{"name":"in_reserve","type":"u64"},{"name":"out_reserve","type":"u64"},{"name":"in_au","type":"u64"},{"name":"out_au","type":"u64"},{"name":"fee_bps","type":"u64"}]}]}'
  );
}

export namespace fee {
  export class Fee {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fee::Fee";
    maker_rebate_bps: number;
    taker_fee_bps: number;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"fee","friends":[],"exposed_functions":[{"name":"add_fee","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address","u64","bool"],"return":["u64"]},{"name":"default_maker_rebate_bps","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u8"]},{"name":"default_taker_fee_bps","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u8"]},{"name":"fee_exists","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address"],"return":["bool"]},{"name":"get_maker_rebate_bps","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address"],"return":["u8"]},{"name":"get_taker_fee_bps","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address"],"return":["u8"]},{"name":"initialize_fee_default","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"maker_rebate","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address","u64"],"return":["u64"]},{"name":"subtract_fee","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address","u64","bool"],"return":["u64"]},{"name":"taker_fee","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address","u64"],"return":["u64"]},{"name":"update_maker_rebase_bps","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["address","u8"],"return":[]},{"name":"update_taker_fee_bps","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["address","u8"],"return":[]}],"structs":[{"name":"Fee","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"maker_rebate_bps","type":"u8"},{"name":"taker_fee_bps","type":"u8"}]}]}'
  );
}

export namespace util {
  export class Type {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::util::Type";
    name: string;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"util","friends":[],"exposed_functions":[{"name":"create_resource_account_addr","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address","vector<u8>"],"return":["address"]},{"name":"exp","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["u128"]},{"name":"name","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::util::Type"],"return":["0x1::string::String"]},{"name":"pow_10_4","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u128"]},{"name":"pow_10_5","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u128"]},{"name":"pow_10_6","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u128"]},{"name":"pow_10_7","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u128"]},{"name":"pow_10_8","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u128"]},{"name":"pow_10_9","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u128"]},{"name":"sub_min_0","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64"],"return":["u64"]},{"name":"sub_min_0_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["u128"]},{"name":"type_of","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::util::Type"]}],"structs":[{"name":"Type","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"name","type":"0x1::string::String"}]}]}'
  );
}

export class vault extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("vault", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): vault {
    return new vault({ ...vault.DEFAULT_OPTIONS, ...options });
  }

  onEntryAddAuthorizedTrader(
    func: (
      call: vault.AddAuthorizedTraderPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): vault {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "vault::add_authorized_trader",
    });
    return this;
  }

  onEntryCreateAuxAccount(
    func: (
      call: vault.CreateAuxAccountPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): vault {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "vault::create_aux_account",
    });
    return this;
  }

  onEntryCreateVault(
    func: (call: vault.CreateVaultPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): vault {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "vault::create_vault",
    });
    return this;
  }

  onEntryDeposit(
    func: (call: vault.DepositPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): vault {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "vault::deposit",
    });
    return this;
  }

  onEntryRemoveAuthorizedTrader(
    func: (
      call: vault.RemoveAuthorizedTraderPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): vault {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "vault::remove_authorized_trader",
    });
    return this;
  }

  onEntryTransfer(
    func: (call: vault.TransferPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): vault {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "vault::transfer",
    });
    return this;
  }

  onEntryWithdraw(
    func: (call: vault.WithdrawPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): vault {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "vault::withdraw",
    });
    return this;
  }

  onEventTransferEvent(
    func: (event: vault.TransferEventInstance, ctx: aptos.AptosContext) => void
  ): vault {
    this.onEvent(func, {
      type: "vault::TransferEvent",
    });
    return this;
  }

  onEventDepositEvent(
    func: (event: vault.DepositEventInstance, ctx: aptos.AptosContext) => void
  ): vault {
    this.onEvent(func, {
      type: "vault::DepositEvent",
    });
    return this;
  }

  onEventWithdrawEvent(
    func: (event: vault.WithdrawEventInstance, ctx: aptos.AptosContext) => void
  ): vault {
    this.onEvent(func, {
      type: "vault::WithdrawEvent",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace vault {
  export class AuxUserAccount {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::AuxUserAccount";
    authorized_traders: _0x1.table.Table<Address, vault.Nothing>;
  }

  export class CoinBalance<T0> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::CoinBalance";
    balance: bigint;
    available_balance: bigint;
  }

  export class CoinInfo {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::CoinInfo";
    coin_type: util.Type;
    decimals: number;
    mark_price: bigint;
  }

  export class DepositEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::DepositEvent";
    coinType: string;
    depositor: Address;
    to: Address;
    amount_au: bigint;
  }

  export interface DepositEventInstance
    extends aptos.TypedEventInstance<DepositEvent> {
    data_typed: DepositEvent;
    type_arguments: [];
  }

  export class Nothing {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::Nothing";
    dummy_field: Boolean;
  }

  export class TransferEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::TransferEvent";
    coinType: string;
    from: Address;
    to: Address;
    amount_au: bigint;
  }

  export interface TransferEventInstance
    extends aptos.TypedEventInstance<TransferEvent> {
    data_typed: TransferEvent;
    type_arguments: [];
  }

  export class Vault {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::Vault";
    transfer_events: _0x1.event.EventHandle<vault.TransferEvent>;
    deposit_events: _0x1.event.EventHandle<vault.DepositEvent>;
    withdraw_events: _0x1.event.EventHandle<vault.WithdrawEvent>;
  }

  export class WithdrawEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::WithdrawEvent";
    coinType: string;
    owner: Address;
    amount_au: bigint;
  }

  export interface WithdrawEventInstance
    extends aptos.TypedEventInstance<WithdrawEvent> {
    data_typed: WithdrawEvent;
    type_arguments: [];
  }

  export interface AddAuthorizedTraderPayload
    extends aptos.TypedEntryFunctionPayload<[Address]> {
    arguments_typed: [Address];
    type_arguments: [];
  }

  export interface CreateAuxAccountPayload
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export interface CreateVaultPayload
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export interface DepositPayload<T0 = any>
    extends aptos.TypedEntryFunctionPayload<[Address, bigint]> {
    arguments_typed: [Address, bigint];
    type_arguments: [string];
  }

  export interface RemoveAuthorizedTraderPayload
    extends aptos.TypedEntryFunctionPayload<[Address]> {
    arguments_typed: [Address];
    type_arguments: [];
  }

  export interface TransferPayload<T0 = any>
    extends aptos.TypedEntryFunctionPayload<[Address, bigint]> {
    arguments_typed: [Address, bigint];
    type_arguments: [string];
  }

  export interface WithdrawPayload<T0 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"vault","friends":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market"],"exposed_functions":[{"name":"add_authorized_trader","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","address"],"return":[]},{"name":"assert_trader_is_authorized_for_account","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&signer","address"],"return":[]},{"name":"available_balance","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address"],"return":["u128"]},{"name":"balance","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address"],"return":["u128"]},{"name":"create_aux_account","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"create_vault","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"decrease_available_balance","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u128"],"return":["u128"]},{"name":"decrease_unavailable_balance","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u128"],"return":["u128"]},{"name":"decrease_user_balance","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u128"],"return":["u128"]},{"name":"deposit","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","address","u64"],"return":[]},{"name":"deposit_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>"],"return":[]},{"name":"has_aux_account","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address"],"return":["bool"]},{"name":"increase_available_balance","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u128"],"return":["u128"]},{"name":"increase_user_balance","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u128"],"return":["u128"]},{"name":"remove_authorized_trader","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","address"],"return":[]},{"name":"transfer","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","address","u64"],"return":[]},{"name":"withdraw","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"withdraw_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":["0x1::coin::Coin<T0>"]}],"structs":[{"name":"AuxUserAccount","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"authorized_traders","type":"0x1::table::Table<address, 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::Nothing>"}]},{"name":"CoinBalance","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"balance","type":"u128"},{"name":"available_balance","type":"u128"}]},{"name":"CoinInfo","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"coin_type","type":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::util::Type"},{"name":"decimals","type":"u8"},{"name":"mark_price","type":"u64"}]},{"name":"DepositEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"coinType","type":"0x1::string::String"},{"name":"depositor","type":"address"},{"name":"to","type":"address"},{"name":"amount_au","type":"u64"}]},{"name":"Nothing","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"TransferEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"coinType","type":"0x1::string::String"},{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"amount_au","type":"u64"}]},{"name":"Vault","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"transfer_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::TransferEvent>"},{"name":"deposit_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::DepositEvent>"},{"name":"withdraw_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault::WithdrawEvent>"}]},{"name":"WithdrawEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"coinType","type":"0x1::string::String"},{"name":"owner","type":"address"},{"name":"amount_au","type":"u64"}]}]}'
  );
}

export class router extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("router", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): router {
    return new router({ ...router.DEFAULT_OPTIONS, ...options });
  }

  onEntrySwapCoinForExactCoinWithSigner(
    func: (
      call: router.SwapCoinForExactCoinWithSignerPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): router {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "router::swap_coin_for_exact_coin_with_signer",
    });
    return this;
  }

  onEntrySwapExactCoinForCoinWithSigner(
    func: (
      call: router.SwapExactCoinForCoinWithSignerPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): router {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "router::swap_exact_coin_for_coin_with_signer",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace router {
  export interface SwapCoinForExactCoinWithSignerPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string];
  }

  export interface SwapExactCoinForCoinWithSignerPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"router","friends":[],"exposed_functions":[{"name":"swap_coin_for_exact_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","u64","u64"],"return":["0x1::coin::Coin<T1>","0x1::coin::Coin<T0>"]},{"name":"swap_coin_for_exact_coin_with_signer","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"swap_exact_coin_for_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","u64","u64"],"return":["0x1::coin::Coin<T1>","0x1::coin::Coin<T0>"]},{"name":"swap_exact_coin_for_coin_with_signer","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]}],"structs":[]}'
  );
}

export namespace critbit {
  export class CritbitTree<T0> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree";
    root: bigint;
    tree: _0x1.table_with_length.TableWithLength<bigint, critbit.TreeNode>;
    min_index: bigint;
    max_index: bigint;
    entries: _0x1.table_with_length.TableWithLength<
      bigint,
      critbit.DataNode<T0>
    >;
  }

  export class DataNode<T0> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::DataNode";
    key: bigint;
    parent: bigint;
    value: T0;
  }

  export class TreeNode {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::TreeNode";
    mask: bigint;
    parent: bigint;
    left_child: bigint;
    right_child: bigint;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"critbit","friends":[],"exposed_functions":[{"name":"borrow_at_index","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>","u64"],"return":["u128","&T0"]},{"name":"borrow_at_index_mut","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&mut 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>","u64"],"return":["u128","&mut T0"]},{"name":"destroy_empty","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>"],"return":[]},{"name":"empty","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>"],"return":["bool"]},{"name":"find","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>","u128"],"return":["u64"]},{"name":"get_max_index","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>"],"return":["u64"]},{"name":"get_min_index","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>"],"return":["u64"]},{"name":"insert","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&mut 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>","u128","T0"],"return":[]},{"name":"is_null_index","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["bool"]},{"name":"new","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":["store"]}],"params":[],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>"]},{"name":"next_in_order","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>","u64"],"return":["u64"]},{"name":"next_in_reverse_order","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>","u64"],"return":["u64"]},{"name":"null_index_value","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u64"]},{"name":"remove","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&mut 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>","u64"],"return":["u128","T0"]},{"name":"size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<T0>"],"return":["u64"]}],"structs":[{"name":"CritbitTree","is_native":false,"abilities":["store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"root","type":"u64"},{"name":"tree","type":"0x1::table_with_length::TableWithLength<u64, 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::TreeNode>"},{"name":"min_index","type":"u64"},{"name":"max_index","type":"u64"},{"name":"entries","type":"0x1::table_with_length::TableWithLength<u64, 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::DataNode<T0>>"}]},{"name":"DataNode","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"key","type":"u128"},{"name":"parent","type":"u64"},{"name":"value","type":"T0"}]},{"name":"TreeNode","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"mask","type":"u128"},{"name":"parent","type":"u64"},{"name":"left_child","type":"u64"},{"name":"right_child","type":"u64"}]}]}'
  );
}

export namespace uint256 {
  export class Uint256 {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256";
    hi: bigint;
    lo: bigint;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"uint256","friends":[],"exposed_functions":[{"name":"add","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"add_underlying","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","u128"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"bitwise_and","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"bitwise_or","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"bitwise_xor","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"divide","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"divide_mod","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"divide_mod_underlying","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","u128"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","u128"]},{"name":"divide_underlying","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","u128"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"downcast","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["u128"]},{"name":"equal","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["bool"]},{"name":"greater","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["bool"]},{"name":"hi","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["u128"]},{"name":"is_zero","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["bool"]},{"name":"leading_zeros","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["u8"]},{"name":"less","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["bool"]},{"name":"lo","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["u128"]},{"name":"lsh","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","u8"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"mod","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"multiply","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"multiply_underlying","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","u128"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"new","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"rsh","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","u8"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"subtract","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"underlying_add_with_carry","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["u128","u128"]},{"name":"underlying_leading_zeros","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128"],"return":["u8"]},{"name":"underlying_mul_to_uint256","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]},{"name":"underlying_mul_with_carry","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["u128","u128"]},{"name":"underlying_overflow","visibility":"public","is_entry":false,"generic_type_params":[],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"],"return":["bool"]},{"name":"underlying_sub_with_borrow","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["u128","u128"]},{"name":"zero","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::uint256::Uint256"]}],"structs":[{"name":"Uint256","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"hi","type":"u128"},{"name":"lo","type":"u128"}]}]}'
  );
}

export class aux_coin extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("aux_coin", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): aux_coin {
    return new aux_coin({ ...aux_coin.DEFAULT_OPTIONS, ...options });
  }

  onEntryInitializeAuxCoin(
    func: (
      call: aux_coin.InitializeAuxCoinPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): aux_coin {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "aux_coin::initialize_aux_coin",
    });
    return this;
  }

  onEntryMint(
    func: (call: aux_coin.MintPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): aux_coin {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "aux_coin::mint",
    });
    return this;
  }

  onEntryRegisterAccount(
    func: (
      call: aux_coin.RegisterAccountPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): aux_coin {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "aux_coin::register_account",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace aux_coin {
  export class AuxCoin {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::aux_coin::AuxCoin";
    dummy_field: Boolean;
  }

  export interface InitializeAuxCoinPayload
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export interface MintPayload
    extends aptos.TypedEntryFunctionPayload<[Address, bigint]> {
    arguments_typed: [Address, bigint];
    type_arguments: [];
  }

  export interface RegisterAccountPayload
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"aux_coin","friends":[],"exposed_functions":[{"name":"initialize_aux_coin","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"mint","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","address","u64"],"return":[]},{"name":"register_account","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]}],"structs":[{"name":"AuxCoin","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export namespace authority {
  export class Authority {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::authority::Authority";
    signer_capability: _0x1.account.SignerCapability;
    owner_address: Address;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"authority","friends":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::amm","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::aux_coin","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_coin","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::router","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault"],"exposed_functions":[{"name":"get_signer","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":["signer"]},{"name":"get_signer_self","visibility":"friend","is_entry":false,"generic_type_params":[],"params":[],"return":["signer"]},{"name":"is_signer_owner","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":["bool"]}],"structs":[{"name":"Authority","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_capability","type":"0x1::account::SignerCapability"},{"name":"owner_address","type":"address"}]}]}'
  );
}

export namespace critbit_v {
  export class CritbitTree<T0> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree";
    root: bigint;
    tree: critbit_v.TreeNode[];
    min_index: bigint;
    max_index: bigint;
    entries: critbit_v.DataNode<T0>[];
  }

  export class DataNode<T0> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::DataNode";
    key: bigint;
    parent: bigint;
    value: T0;
  }

  export class TreeNode {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::TreeNode";
    mask: bigint;
    parent: bigint;
    left_child: bigint;
    right_child: bigint;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"critbit_v","friends":[],"exposed_functions":[{"name":"borrow_at_index","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>","u64"],"return":["u128","&T0"]},{"name":"borrow_at_index_mut","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&mut 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>","u64"],"return":["u128","&mut T0"]},{"name":"destroy_empty","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>"],"return":[]},{"name":"empty","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>"],"return":["bool"]},{"name":"find","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>","u128"],"return":["u64"]},{"name":"get_max_index","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>"],"return":["u64"]},{"name":"get_min_index","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>"],"return":["u64"]},{"name":"insert","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&mut 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>","u128","T0"],"return":[]},{"name":"is_null_index","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":["bool"]},{"name":"new","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>"]},{"name":"next_in_order","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>","u64"],"return":["u64"]},{"name":"next_in_reverse_order","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>","u64"],"return":["u64"]},{"name":"null_index_value","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u64"]},{"name":"remove","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&mut 0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>","u64"],"return":["u128","T0"]},{"name":"size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<T0>"],"return":["u64"]}],"structs":[{"name":"CritbitTree","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"root","type":"u64"},{"name":"tree","type":"vector<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::TreeNode>"},{"name":"min_index","type":"u64"},{"name":"max_index","type":"u64"},{"name":"entries","type":"vector<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::DataNode<T0>>"}]},{"name":"DataNode","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"key","type":"u128"},{"name":"parent","type":"u64"},{"name":"value","type":"T0"}]},{"name":"TreeNode","is_native":false,"abilities":["copy","drop","store"],"generic_type_params":[],"fields":[{"name":"mask","type":"u128"},{"name":"parent","type":"u64"},{"name":"left_child","type":"u64"},{"name":"right_child","type":"u64"}]}]}'
  );
}

export class fake_coin extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("fake_coin", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): fake_coin {
    return new fake_coin({ ...fake_coin.DEFAULT_OPTIONS, ...options });
  }

  onEntryBurn(
    func: (call: fake_coin.BurnPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): fake_coin {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "fake_coin::burn",
    });
    return this;
  }

  onEntryMint(
    func: (call: fake_coin.MintPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): fake_coin {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "fake_coin::mint",
    });
    return this;
  }

  onEntryRegister(
    func: (call: fake_coin.RegisterPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): fake_coin {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "fake_coin::register",
    });
    return this;
  }

  onEntryRegisterAndMint(
    func: (
      call: fake_coin.RegisterAndMintPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): fake_coin {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "fake_coin::register_and_mint",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace fake_coin {
  export class AUX {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_coin::AUX";
    dummy_field: Boolean;
  }

  export class BTC {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_coin::BTC";
    dummy_field: Boolean;
  }

  export class ETH {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_coin::ETH";
    dummy_field: Boolean;
  }

  export class FakeCoin<T0> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_coin::FakeCoin";
    dummy_field: Boolean;
  }

  export class SOL {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_coin::SOL";
    dummy_field: Boolean;
  }

  export class USDC {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_coin::USDC";
    dummy_field: Boolean;
  }

  export class USDT {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_coin::USDT";
    dummy_field: Boolean;
  }

  export interface BurnPayload<T0 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string];
  }

  export interface MintPayload<T0 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string];
  }

  export interface RegisterPayload<T0 = any>
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [string];
  }

  export interface RegisterAndMintPayload<T0 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"fake_coin","friends":[],"exposed_functions":[{"name":"burn","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"mint","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"register","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"register_and_mint","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]}],"structs":[{"name":"AUX","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"BTC","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"ETH","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"FakeCoin","is_native":false,"abilities":[],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"SOL","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"USDC","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"USDT","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export class clob_market extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("clob_market", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): clob_market {
    return new clob_market({ ...clob_market.DEFAULT_OPTIONS, ...options });
  }

  onEntryCancelAll(
    func: (call: clob_market.CancelAllPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::cancel_all",
    });
    return this;
  }

  onEntryCancelOrder(
    func: (
      call: clob_market.CancelOrderPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::cancel_order",
    });
    return this;
  }

  onEntryCreateMarket(
    func: (
      call: clob_market.CreateMarketPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::create_market",
    });
    return this;
  }

  onEntryFastCancelOrder(
    func: (
      call: clob_market.FastCancelOrderPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::fast_cancel_order",
    });
    return this;
  }

  onEntryLoadAllOrdersIntoEvent(
    func: (
      call: clob_market.LoadAllOrdersIntoEventPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::load_all_orders_into_event",
    });
    return this;
  }

  onEntryLoadMarketIntoEvent(
    func: (
      call: clob_market.LoadMarketIntoEventPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::load_market_into_event",
    });
    return this;
  }

  onEntryLoadOpenOrdersIntoEvent(
    func: (
      call: clob_market.LoadOpenOrdersIntoEventPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::load_open_orders_into_event",
    });
    return this;
  }

  onEntryLoadOpenOrdersIntoEventForAddress(
    func: (
      call: clob_market.LoadOpenOrdersIntoEventForAddressPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::load_open_orders_into_event_for_address",
    });
    return this;
  }

  onEntryPlaceOrder(
    func: (
      call: clob_market.PlaceOrderPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::place_order",
    });
    return this;
  }

  onEntryUpdateMarketParameter(
    func: (
      call: clob_market.UpdateMarketParameterPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): clob_market {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "clob_market::update_market_parameter",
    });
    return this;
  }

  onEventAllOrdersEvent(
    func: (
      event: clob_market.AllOrdersEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): clob_market {
    this.onEvent(func, {
      type: "clob_market::AllOrdersEvent",
    });
    return this;
  }

  onEventOrderFillEvent(
    func: (
      event: clob_market.OrderFillEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): clob_market {
    this.onEvent(func, {
      type: "clob_market::OrderFillEvent",
    });
    return this;
  }

  onEventOrderCancelEvent(
    func: (
      event: clob_market.OrderCancelEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): clob_market {
    this.onEvent(func, {
      type: "clob_market::OrderCancelEvent",
    });
    return this;
  }

  onEventOrderPlacedEvent(
    func: (
      event: clob_market.OrderPlacedEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): clob_market {
    this.onEvent(func, {
      type: "clob_market::OrderPlacedEvent",
    });
    return this;
  }

  onEventL2Event(
    func: (event: clob_market.L2EventInstance, ctx: aptos.AptosContext) => void
  ): clob_market {
    this.onEvent(func, {
      type: "clob_market::L2Event",
    });
    return this;
  }

  onEventOpenOrdersEvent(
    func: (
      event: clob_market.OpenOrdersEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): clob_market {
    this.onEvent(func, {
      type: "clob_market::OpenOrdersEvent",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace clob_market {
  export class AllOrdersEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::AllOrdersEvent";
    bids: clob_market.OpenOrderEventInfo[][];
    asks: clob_market.OpenOrderEventInfo[][];
  }

  export interface AllOrdersEventInstance
    extends aptos.TypedEventInstance<AllOrdersEvent> {
    data_typed: AllOrdersEvent;
    type_arguments: [];
  }

  export class AllOrdersStore<T0, T1> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::AllOrdersStore";
    all_ordes_events: _0x1.event.EventHandle<clob_market.AllOrdersEvent>;
  }

  export class L2Event {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::L2Event";
    bids: clob_market.L2Quote[];
    asks: clob_market.L2Quote[];
  }

  export interface L2EventInstance extends aptos.TypedEventInstance<L2Event> {
    data_typed: L2Event;
    type_arguments: [];
  }

  export class L2Quote {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::L2Quote";
    price: bigint;
    quantity: bigint;
  }

  export class Level {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::Level";
    price: bigint;
    total_quantity: bigint;
    orders: critbit_v.CritbitTree<clob_market.Order>;
  }

  export class Market<T0, T1> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::Market";
    bids: critbit.CritbitTree<clob_market.Level>;
    asks: critbit.CritbitTree<clob_market.Level>;
    next_order_id: bigint;
    base_decimals: number;
    quote_decimals: number;
    lot_size: bigint;
    tick_size: bigint;
    fill_events: _0x1.event.EventHandle<clob_market.OrderFillEvent>;
    cancel_events: _0x1.event.EventHandle<clob_market.OrderCancelEvent>;
    placed_events: _0x1.event.EventHandle<clob_market.OrderPlacedEvent>;
  }

  export class MarketDataStore<T0, T1> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::MarketDataStore";
    l2_events: _0x1.event.EventHandle<clob_market.L2Event>;
    open_orders_events: _0x1.event.EventHandle<clob_market.OpenOrdersEvent>;
  }

  export class OpenOrderAccount<T0, T1> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrderAccount";
    open_orders: critbit.CritbitTree<clob_market.OpenOrderInfo>;
  }

  export class OpenOrderEventInfo {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrderEventInfo";
    id: bigint;
    client_order_id: bigint;
    price: bigint;
    quantity: bigint;
    aux_au_to_burn_per_lot: bigint;
    is_bid: Boolean;
    owner_id: Address;
    timeout_timestamp: bigint;
    order_type: bigint;
    timestamp: bigint;
  }

  export class OpenOrderInfo {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrderInfo";
    price: bigint;
    is_bid: Boolean;
  }

  export class OpenOrdersEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrdersEvent";
    open_orders: clob_market.OpenOrderEventInfo[];
  }

  export interface OpenOrdersEventInstance
    extends aptos.TypedEventInstance<OpenOrdersEvent> {
    data_typed: OpenOrdersEvent;
    type_arguments: [];
  }

  export class Order {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::Order";
    id: bigint;
    client_order_id: bigint;
    price: bigint;
    quantity: bigint;
    aux_au_to_burn_per_lot: bigint;
    is_bid: Boolean;
    owner_id: Address;
    timeout_timestamp: bigint;
    order_type: bigint;
    timestamp: bigint;
  }

  export class OrderCancelEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OrderCancelEvent";
    order_id: bigint;
    client_order_id: bigint;
    owner: Address;
    cancel_qty: bigint;
    timestamp: bigint;
    order_type: bigint;
  }

  export interface OrderCancelEventInstance
    extends aptos.TypedEventInstance<OrderCancelEvent> {
    data_typed: OrderCancelEvent;
    type_arguments: [];
  }

  export class OrderFillEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OrderFillEvent";
    order_id: bigint;
    client_order_id: bigint;
    is_bid: Boolean;
    owner: Address;
    base_qty: bigint;
    price: bigint;
    fee: bigint;
    rebate: bigint;
    remaining_qty: bigint;
    timestamp: bigint;
  }

  export interface OrderFillEventInstance
    extends aptos.TypedEventInstance<OrderFillEvent> {
    data_typed: OrderFillEvent;
    type_arguments: [];
  }

  export class OrderPlacedEvent {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OrderPlacedEvent";
    order_id: bigint;
    client_order_id: bigint;
    owner: Address;
    is_bid: Boolean;
    qty: bigint;
    price: bigint;
    timestamp: bigint;
  }

  export interface OrderPlacedEventInstance
    extends aptos.TypedEventInstance<OrderPlacedEvent> {
    data_typed: OrderPlacedEvent;
    type_arguments: [];
  }

  export interface CancelAllPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[Address]> {
    arguments_typed: [Address];
    type_arguments: [string, string];
  }

  export interface CancelOrderPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[Address, bigint]> {
    arguments_typed: [Address, bigint];
    type_arguments: [string, string];
  }

  export interface CreateMarketPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string];
  }

  export interface FastCancelOrderPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<
      [Address, bigint, bigint, Boolean]
    > {
    arguments_typed: [Address, bigint, bigint, Boolean];
    type_arguments: [string, string];
  }

  export interface LoadAllOrdersIntoEventPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [string, string];
  }

  export interface LoadMarketIntoEventPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [string, string];
  }

  export interface LoadOpenOrdersIntoEventPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [string, string];
  }

  export interface LoadOpenOrdersIntoEventForAddressPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[Address]> {
    arguments_typed: [Address];
    type_arguments: [string, string];
  }

  export interface PlaceOrderPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<
      [
        Address,
        Boolean,
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        bigint,
        Boolean,
        bigint,
        bigint
      ]
    > {
    arguments_typed: [
      Address,
      Boolean,
      bigint,
      bigint,
      bigint,
      bigint,
      bigint,
      bigint,
      Boolean,
      bigint,
      bigint
    ];
    type_arguments: [string, string];
  }

  export interface UpdateMarketParameterPayload<T0 = any, T1 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"clob_market","friends":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::router"],"exposed_functions":[{"name":"best_ask_au","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"best_ask_price","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::Market<T0, T1>"],"return":["u64"]},{"name":"best_bid_au","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"best_bid_price","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::Market<T0, T1>"],"return":["u64"]},{"name":"cancel_all","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","address"],"return":[]},{"name":"cancel_order","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","address","u128"],"return":[]},{"name":"create_market","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"fast_cancel_order","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","address","u128","u64","bool"],"return":[]},{"name":"load_all_orders_into_event","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"load_market_into_event","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"load_open_orders_into_event","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"load_open_orders_into_event_for_address","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","address"],"return":[]},{"name":"lot_size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"market_exists","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"n_ask_levels","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"n_bid_levels","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"place_market_order","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","bool","u64","u64","u64","u128"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"place_market_order_mut","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["address","&mut 0x1::coin::Coin<T0>","&mut 0x1::coin::Coin<T1>","bool","u64","u64","u64","u128"],"return":["u64","u64"]},{"name":"place_order","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","address","bool","u64","u64","u64","u128","u64","u64","bool","u64","u64"],"return":[]},{"name":"tick_size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"update_market_parameter","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]}],"structs":[{"name":"AllOrdersEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"bids","type":"vector<vector<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrderEventInfo>>"},{"name":"asks","type":"vector<vector<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrderEventInfo>>"}]},{"name":"AllOrdersStore","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]}],"fields":[{"name":"all_ordes_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::AllOrdersEvent>"}]},{"name":"L2Event","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"bids","type":"vector<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::L2Quote>"},{"name":"asks","type":"vector<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::L2Quote>"}]},{"name":"L2Quote","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"price","type":"u64"},{"name":"quantity","type":"u128"}]},{"name":"Level","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"price","type":"u64"},{"name":"total_quantity","type":"u128"},{"name":"orders","type":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit_v::CritbitTree<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::Order>"}]},{"name":"Market","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]}],"fields":[{"name":"bids","type":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::Level>"},{"name":"asks","type":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::Level>"},{"name":"next_order_id","type":"u64"},{"name":"base_decimals","type":"u8"},{"name":"quote_decimals","type":"u8"},{"name":"lot_size","type":"u64"},{"name":"tick_size","type":"u64"},{"name":"fill_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OrderFillEvent>"},{"name":"cancel_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OrderCancelEvent>"},{"name":"placed_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OrderPlacedEvent>"}]},{"name":"MarketDataStore","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]}],"fields":[{"name":"l2_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::L2Event>"},{"name":"open_orders_events","type":"0x1::event::EventHandle<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrdersEvent>"}]},{"name":"OpenOrderAccount","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]}],"fields":[{"name":"open_orders","type":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::critbit::CritbitTree<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrderInfo>"}]},{"name":"OpenOrderEventInfo","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"id","type":"u128"},{"name":"client_order_id","type":"u128"},{"name":"price","type":"u64"},{"name":"quantity","type":"u64"},{"name":"aux_au_to_burn_per_lot","type":"u64"},{"name":"is_bid","type":"bool"},{"name":"owner_id","type":"address"},{"name":"timeout_timestamp","type":"u64"},{"name":"order_type","type":"u64"},{"name":"timestamp","type":"u64"}]},{"name":"OpenOrderInfo","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"price","type":"u64"},{"name":"is_bid","type":"bool"}]},{"name":"OpenOrdersEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"open_orders","type":"vector<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market::OpenOrderEventInfo>"}]},{"name":"Order","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"id","type":"u128"},{"name":"client_order_id","type":"u128"},{"name":"price","type":"u64"},{"name":"quantity","type":"u64"},{"name":"aux_au_to_burn_per_lot","type":"u64"},{"name":"is_bid","type":"bool"},{"name":"owner_id","type":"address"},{"name":"timeout_timestamp","type":"u64"},{"name":"order_type","type":"u64"},{"name":"timestamp","type":"u64"}]},{"name":"OrderCancelEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"order_id","type":"u128"},{"name":"client_order_id","type":"u128"},{"name":"owner","type":"address"},{"name":"cancel_qty","type":"u64"},{"name":"timestamp","type":"u64"},{"name":"order_type","type":"u64"}]},{"name":"OrderFillEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"order_id","type":"u128"},{"name":"client_order_id","type":"u128"},{"name":"is_bid","type":"bool"},{"name":"owner","type":"address"},{"name":"base_qty","type":"u64"},{"name":"price","type":"u64"},{"name":"fee","type":"u64"},{"name":"rebate","type":"u64"},{"name":"remaining_qty","type":"u64"},{"name":"timestamp","type":"u64"}]},{"name":"OrderPlacedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"order_id","type":"u128"},{"name":"client_order_id","type":"u128"},{"name":"owner","type":"address"},{"name":"is_bid","type":"bool"},{"name":"qty","type":"u64"},{"name":"price","type":"u64"},{"name":"timestamp","type":"u64"}]}]}'
  );
}

export namespace fake_markets {
  export class Initialized {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::fake_markets::Initialized";
    dummy_field: Boolean;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"fake_markets","friends":[],"exposed_functions":[],"structs":[{"name":"Initialized","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export namespace onchain_signer {
  export class OnchainSigner {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::onchain_signer::OnchainSigner";
    signer_capability: _0x1.account.SignerCapability;
    account_address: Address;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"onchain_signer","friends":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::vault","0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::volume_tracker"],"exposed_functions":[{"name":"create_onchain_signer","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"get_signer","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["address"],"return":["signer"]},{"name":"get_signer_address","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["address"],"return":["address"]},{"name":"has_onchain_signer","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["address"],"return":["bool"]}],"structs":[{"name":"OnchainSigner","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_capability","type":"0x1::account::SignerCapability"},{"name":"account_address","type":"address"}]}]}'
  );
}

export namespace volume_tracker {
  export class SingleAssetTracker<T0> {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::volume_tracker::SingleAssetTracker";
    volume_tracker: volume_tracker.VolumeTracker;
  }

  export class VolumeEntry {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::volume_tracker::VolumeEntry";
    volume: bigint;
    timestamp: bigint;
    day: bigint;
  }

  export class VolumeTracker {
    static TYPE_QNAME =
      "0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::volume_tracker::VolumeTracker";
    initial_timestamp: bigint;
    buffer: volume_tracker.VolumeEntry[];
    past_30_days_total: bigint;
    last_update_day: bigint;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541","name":"volume_tracker","friends":["0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::clob_market"],"exposed_functions":[{"name":"get_past_30_day_volume","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u64"],"return":["u128"]},{"name":"global_volume_tracker_registered","visibility":"public","is_entry":false,"generic_type_params":[],"params":["address"],"return":["bool"]},{"name":"is_coin_volume_tracked","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address"],"return":["bool"]},{"name":"register_coin_for_volume_track","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address"],"return":[]},{"name":"register_global_volume_tracker","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"update_volume_tracker","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":["address","u64","u64"],"return":[]}],"structs":[{"name":"SingleAssetTracker","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]}],"fields":[{"name":"volume_tracker","type":"0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::volume_tracker::VolumeTracker"}]},{"name":"VolumeEntry","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"volume","type":"u128"},{"name":"timestamp","type":"u64"},{"name":"day","type":"u64"}]},{"name":"VolumeTracker","is_native":false,"abilities":["store"],"generic_type_params":[],"fields":[{"name":"initial_timestamp","type":"u64"},{"name":"buffer","type":"vector<0xbd35135844473187163ca197ca93b2ab014370587bb0ed3befff9e902d6bb541::volume_tracker::VolumeEntry>"},{"name":"past_30_days_total","type":"u128"},{"name":"last_update_day","type":"u64"}]}]}'
  );
}

export function loadAllTypes(_r: aptos.TypeRegistry) {
  _0x1.loadAllTypes(_r);

  _r.load(amm.ABI);
  _r.load(fee.ABI);
  _r.load(util.ABI);
  _r.load(vault.ABI);
  _r.load(router.ABI);
  _r.load(critbit.ABI);
  _r.load(uint256.ABI);
  _r.load(aux_coin.ABI);
  _r.load(authority.ABI);
  _r.load(critbit_v.ABI);
  _r.load(fake_coin.ABI);
  _r.load(clob_market.ABI);
  _r.load(fake_markets.ABI);
  _r.load(onchain_signer.ABI);
  _r.load(volume_tracker.ABI);
}
