/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

/* Generated modules for account 0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12 */

import { aptos } from "@sentio/sdk";
import { Address, MoveModule } from "aptos-sdk/src/generated";

import * as _0x1 from "@sentio/sdk/lib/builtin/aptos/0x1";
import * as _0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948 from "./0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948";

export namespace math {
  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"math","friends":[],"exposed_functions":[{"name":"min_u64","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64"],"return":["u64"]},{"name":"mul_div","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64","u64"],"return":["u64"]},{"name":"mul_div_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128","u128"],"return":["u64"]},{"name":"mul_to_u128","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64"],"return":["u128"]},{"name":"overflow_add","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u128"],"return":["u128"]},{"name":"pow_10","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u8"],"return":["u64"]},{"name":"sqrt","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128"],"return":["u64"]}],"structs":[]}'
  );
}

export namespace curves {
  export class Stable {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Stable";
    dummy_field: Boolean;
  }

  export class Uncorrelated {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::curves::Uncorrelated";
    dummy_field: Boolean;
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"curves","friends":[],"exposed_functions":[{"name":"assert_valid_curve","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":[]},{"name":"is_stable","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"is_uncorrelated","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]},{"name":"is_valid_curve","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["bool"]}],"structs":[{"name":"Stable","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"Uncorrelated","is_native":false,"abilities":[],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export namespace router {
  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"router","friends":[],"exposed_functions":[{"name":"add_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64","0x1::coin::Coin<T1>","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","0x1::coin::Coin<0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948::lp_coin::LP<T0, T1, T2>>"]},{"name":"calc_optimal_coin_values","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64","u64","u64","u64"],"return":["u64","u64"]},{"name":"convert_with_current_price","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64","u64"],"return":["u64"]},{"name":"get_amount_in","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"get_amount_out","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"get_cumulative_prices","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u128","u128","u64"]},{"name":"get_dao_fee","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"get_dao_fees_config","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_decimals_scales","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_fee","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"get_fees_config","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_reserves_for_lp_coins","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64","u64"]},{"name":"get_reserves_size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"is_swap_exists","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"register_pool","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"remove_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948::lp_coin::LP<T0, T1, T2>>","u64","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"swap_coin_for_coin_unchecked","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T1>"]},{"name":"swap_coin_for_exact_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"swap_exact_coin_for_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T1>"]}],"structs":[]}'
  );
}

export class scripts extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("scripts", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): scripts {
    return new scripts({ ...scripts.DEFAULT_OPTIONS, ...options });
  }

  onEntryAddLiquidity(
    func: (call: scripts.AddLiquidityPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): scripts {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts::add_liquidity",
    });
    return this;
  }

  onEntryRegisterPool(
    func: (call: scripts.RegisterPoolPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): scripts {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts::register_pool",
    });
    return this;
  }

  onEntryRegisterPoolAndAddLiquidity(
    func: (
      call: scripts.RegisterPoolAndAddLiquidityPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): scripts {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts::register_pool_and_add_liquidity",
    });
    return this;
  }

  onEntryRemoveLiquidity(
    func: (
      call: scripts.RemoveLiquidityPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): scripts {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts::remove_liquidity",
    });
    return this;
  }

  onEntrySwap(
    func: (call: scripts.SwapPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): scripts {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts::swap",
    });
    return this;
  }

  onEntrySwapInto(
    func: (call: scripts.SwapIntoPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): scripts {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts::swap_into",
    });
    return this;
  }

  onEntrySwapUnchecked(
    func: (call: scripts.SwapUncheckedPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): scripts {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts::swap_unchecked",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace scripts {
  export interface AddLiquidityPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface RegisterPoolPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [string, string, string];
  }

  export interface RegisterPoolAndAddLiquidityPayload<
    T0 = any,
    T1 = any,
    T2 = any
  > extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface RemoveLiquidityPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface SwapPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface SwapIntoPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface SwapUncheckedPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string, string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"scripts","friends":[],"exposed_functions":[{"name":"add_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64","u64"],"return":[]},{"name":"register_pool","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"register_pool_and_add_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64","u64"],"return":[]},{"name":"remove_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64"],"return":[]},{"name":"swap","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"swap_into","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"swap_unchecked","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]}],"structs":[]}'
  );
}

export class emergency extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("emergency", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): emergency {
    return new emergency({ ...emergency.DEFAULT_OPTIONS, ...options });
  }

  onEntryDisableForever(
    func: (
      call: emergency.DisableForeverPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): emergency {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "emergency::disable_forever",
    });
    return this;
  }

  onEntryPause(
    func: (call: emergency.PausePayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): emergency {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "emergency::pause",
    });
    return this;
  }

  onEntryResume(
    func: (call: emergency.ResumePayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): emergency {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "emergency::resume",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace emergency {
  export class EmergencyAccountCapability {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::emergency::EmergencyAccountCapability";
    signer_cap: _0x1.account.SignerCapability;
  }

  export class IsDisabled {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::emergency::IsDisabled";
    dummy_field: Boolean;
  }

  export class IsEmergency {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::emergency::IsEmergency";
    dummy_field: Boolean;
  }

  export interface DisableForeverPayload
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export interface PausePayload extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export interface ResumePayload extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"emergency","friends":["0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool"],"exposed_functions":[{"name":"assert_no_emergency","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":[]},{"name":"disable_forever","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"initialize","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"is_disabled","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"is_emergency","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["bool"]},{"name":"pause","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"resume","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]}],"structs":[{"name":"EmergencyAccountCapability","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_cap","type":"0x1::account::SignerCapability"}]},{"name":"IsDisabled","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]},{"name":"IsEmergency","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export namespace router_v2 {
  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"router_v2","friends":[],"exposed_functions":[{"name":"add_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64","0x1::coin::Coin<T1>","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","0x1::coin::Coin<0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948::lp_coin::LP<T0, T1, T2>>"]},{"name":"calc_optimal_coin_values","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64","u64","u64","u64"],"return":["u64","u64"]},{"name":"convert_with_current_price","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64","u64","u64"],"return":["u64"]},{"name":"get_amount_in","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"get_amount_out","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64"]},{"name":"get_cumulative_prices","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u128","u128","u64"]},{"name":"get_dao_fee","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"get_dao_fees_config","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_decimals_scales","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_fee","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"get_fees_config","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_reserves_for_lp_coins","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64"],"return":["u64","u64"]},{"name":"get_reserves_size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"is_swap_exists","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"register_pool","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"remove_liquidity","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948::lp_coin::LP<T0, T1, T2>>","u64","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"swap_coin_for_coin_unchecked","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T1>"]},{"name":"swap_coin_for_exact_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"swap_exact_coin_for_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64"],"return":["0x1::coin::Coin<T1>"]}],"structs":[]}'
  );
}

export class lp_account extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("lp_account", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): lp_account {
    return new lp_account({ ...lp_account.DEFAULT_OPTIONS, ...options });
  }

  onEntryInitializeLpAccount(
    func: (
      call: lp_account.InitializeLpAccountPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): lp_account {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "lp_account::initialize_lp_account",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace lp_account {
  export class CapabilityStorage {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::lp_account::CapabilityStorage";
    signer_cap: _0x1.account.SignerCapability;
  }

  export interface InitializeLpAccountPayload
    extends aptos.TypedEntryFunctionPayload<[string, string]> {
    arguments_typed: [string, string];
    type_arguments: [];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"lp_account","friends":[],"exposed_functions":[{"name":"initialize_lp_account","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","vector<u8>","vector<u8>"],"return":[]},{"name":"retrieve_signer_cap","visibility":"public","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":["0x1::account::SignerCapability"]}],"structs":[{"name":"CapabilityStorage","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_cap","type":"0x1::account::SignerCapability"}]}]}'
  );
}

export class scripts_v2 extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("scripts_v2", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): scripts_v2 {
    return new scripts_v2({ ...scripts_v2.DEFAULT_OPTIONS, ...options });
  }

  onEntryAddLiquidity(
    func: (
      call: scripts_v2.AddLiquidityPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): scripts_v2 {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts_v2::add_liquidity",
    });
    return this;
  }

  onEntryRegisterPool(
    func: (
      call: scripts_v2.RegisterPoolPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): scripts_v2 {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts_v2::register_pool",
    });
    return this;
  }

  onEntryRegisterPoolAndAddLiquidity(
    func: (
      call: scripts_v2.RegisterPoolAndAddLiquidityPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): scripts_v2 {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts_v2::register_pool_and_add_liquidity",
    });
    return this;
  }

  onEntryRemoveLiquidity(
    func: (
      call: scripts_v2.RemoveLiquidityPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): scripts_v2 {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts_v2::remove_liquidity",
    });
    return this;
  }

  onEntrySwap(
    func: (call: scripts_v2.SwapPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): scripts_v2 {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts_v2::swap",
    });
    return this;
  }

  onEntrySwapInto(
    func: (call: scripts_v2.SwapIntoPayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): scripts_v2 {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts_v2::swap_into",
    });
    return this;
  }

  onEntrySwapUnchecked(
    func: (
      call: scripts_v2.SwapUncheckedPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): scripts_v2 {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "scripts_v2::swap_unchecked",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace scripts_v2 {
  export interface AddLiquidityPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface RegisterPoolPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [string, string, string];
  }

  export interface RegisterPoolAndAddLiquidityPayload<
    T0 = any,
    T1 = any,
    T2 = any
  > extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface RemoveLiquidityPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint, bigint]> {
    arguments_typed: [bigint, bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface SwapPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface SwapIntoPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string, string];
  }

  export interface SwapUncheckedPayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint, bigint]> {
    arguments_typed: [bigint, bigint];
    type_arguments: [string, string, string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"scripts_v2","friends":[],"exposed_functions":[{"name":"add_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64","u64"],"return":[]},{"name":"register_pool","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"register_pool_and_add_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64","u64"],"return":[]},{"name":"remove_liquidity","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64","u64"],"return":[]},{"name":"swap","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"swap_into","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]},{"name":"swap_unchecked","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64","u64"],"return":[]}],"structs":[]}'
  );
}

export namespace coin_helper {
  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"coin_helper","friends":[],"exposed_functions":[{"name":"assert_is_coin","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":[]},{"name":"compare","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["0x1::comparator::Result"]},{"name":"generate_lp_name_and_symbol","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["0x1::string::String","0x1::string::String"]},{"name":"is_sorted","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"supply","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u128"]}],"structs":[]}'
  );
}

export class dao_storage extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("dao_storage", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): dao_storage {
    return new dao_storage({ ...dao_storage.DEFAULT_OPTIONS, ...options });
  }

  onEventStorageCreatedEvent(
    func: (
      event: dao_storage.StorageCreatedEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): dao_storage {
    this.onEvent(func, {
      type: "dao_storage::StorageCreatedEvent",
    });
    return this;
  }

  onEventCoinDepositedEvent(
    func: (
      event: dao_storage.CoinDepositedEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): dao_storage {
    this.onEvent(func, {
      type: "dao_storage::CoinDepositedEvent",
    });
    return this;
  }

  onEventCoinWithdrawnEvent(
    func: (
      event: dao_storage.CoinWithdrawnEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): dao_storage {
    this.onEvent(func, {
      type: "dao_storage::CoinWithdrawnEvent",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace dao_storage {
  export class CoinDepositedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::dao_storage::CoinDepositedEvent";
    x_val: bigint;
    y_val: bigint;
  }

  export interface CoinDepositedEventInstance
    extends aptos.TypedEventInstance<CoinDepositedEvent<any, any, any>> {
    data_decoded: CoinDepositedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class CoinWithdrawnEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::dao_storage::CoinWithdrawnEvent";
    x_val: bigint;
    y_val: bigint;
  }

  export interface CoinWithdrawnEventInstance
    extends aptos.TypedEventInstance<CoinWithdrawnEvent<any, any, any>> {
    data_decoded: CoinWithdrawnEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class EventsStore<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::dao_storage::EventsStore";
    storage_registered_handle: _0x1.event.EventHandle<
      dao_storage.StorageCreatedEvent<T0, T1, T2>
    >;
    coin_deposited_handle: _0x1.event.EventHandle<
      dao_storage.CoinDepositedEvent<T0, T1, T2>
    >;
    coin_withdrawn_handle: _0x1.event.EventHandle<
      dao_storage.CoinWithdrawnEvent<T0, T1, T2>
    >;
  }

  export class Storage<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::dao_storage::Storage";
    coin_x: _0x1.coin.Coin<T0>;
    coin_y: _0x1.coin.Coin<T1>;
  }

  export class StorageCreatedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::dao_storage::StorageCreatedEvent";
    dummy_field: Boolean;
  }

  export interface StorageCreatedEventInstance
    extends aptos.TypedEventInstance<StorageCreatedEvent<any, any, any>> {
    data_decoded: StorageCreatedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"dao_storage","friends":["0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool"],"exposed_functions":[{"name":"deposit","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["address","0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"],"return":[]},{"name":"register","visibility":"friend","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"withdraw","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","address","u64","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]}],"structs":[{"name":"CoinDepositedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"x_val","type":"u64"},{"name":"y_val","type":"u64"}]},{"name":"CoinWithdrawnEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"x_val","type":"u64"},{"name":"y_val","type":"u64"}]},{"name":"EventsStore","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"storage_registered_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::dao_storage::StorageCreatedEvent<T0, T1, T2>>"},{"name":"coin_deposited_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::dao_storage::CoinDepositedEvent<T0, T1, T2>>"},{"name":"coin_withdrawn_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::dao_storage::CoinWithdrawnEvent<T0, T1, T2>>"}]},{"name":"Storage","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"coin_x","type":"0x1::coin::Coin<T0>"},{"name":"coin_y","type":"0x1::coin::Coin<T1>"}]},{"name":"StorageCreatedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"dummy_field","type":"bool"}]}]}'
  );
}

export namespace stable_curve {
  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"stable_curve","friends":[],"exposed_functions":[{"name":"coin_in","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u64","u64","u128","u128"],"return":["u128"]},{"name":"coin_out","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u64","u64","u128","u128"],"return":["u128"]},{"name":"lp_value","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u128","u64","u128","u64"],"return":["0x4e9fce03284c0ce0b86c88dd5a46f050cad2f4f33c4cdd29d98f501868558c81::u256::U256"]}],"structs":[]}'
  );
}

export class global_config extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("global_config", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): global_config {
    return new global_config({ ...global_config.DEFAULT_OPTIONS, ...options });
  }

  onEntrySetDaoAdmin(
    func: (
      call: global_config.SetDaoAdminPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): global_config {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "global_config::set_dao_admin",
    });
    return this;
  }

  onEntrySetDefaultDaoFee(
    func: (
      call: global_config.SetDefaultDaoFeePayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): global_config {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "global_config::set_default_dao_fee",
    });
    return this;
  }

  onEntrySetDefaultFee(
    func: (
      call: global_config.SetDefaultFeePayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): global_config {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "global_config::set_default_fee",
    });
    return this;
  }

  onEntrySetEmergencyAdmin(
    func: (
      call: global_config.SetEmergencyAdminPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): global_config {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "global_config::set_emergency_admin",
    });
    return this;
  }

  onEntrySetFeeAdmin(
    func: (
      call: global_config.SetFeeAdminPayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): global_config {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "global_config::set_fee_admin",
    });
    return this;
  }

  onEventUpdateDefaultFeeEvent(
    func: (
      event: global_config.UpdateDefaultFeeEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): global_config {
    this.onEvent(func, {
      type: "global_config::UpdateDefaultFeeEvent",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace global_config {
  export class EventsStore {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::global_config::EventsStore";
    default_uncorrelated_fee_handle: _0x1.event.EventHandle<global_config.UpdateDefaultFeeEvent>;
    default_stable_fee_handle: _0x1.event.EventHandle<global_config.UpdateDefaultFeeEvent>;
    default_dao_fee_handle: _0x1.event.EventHandle<global_config.UpdateDefaultFeeEvent>;
  }

  export class GlobalConfig {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::global_config::GlobalConfig";
    dao_admin_address: Address;
    emergency_admin_address: Address;
    fee_admin_address: Address;
    default_uncorrelated_fee: bigint;
    default_stable_fee: bigint;
    default_dao_fee: bigint;
  }

  export class UpdateDefaultFeeEvent {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::global_config::UpdateDefaultFeeEvent";
    fee: bigint;
  }

  export interface UpdateDefaultFeeEventInstance
    extends aptos.TypedEventInstance<UpdateDefaultFeeEvent> {
    data_decoded: UpdateDefaultFeeEvent;
    type_arguments: [];
  }

  export interface SetDaoAdminPayload
    extends aptos.TypedEntryFunctionPayload<[Address]> {
    arguments_typed: [Address];
    type_arguments: [];
  }

  export interface SetDefaultDaoFeePayload
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [];
  }

  export interface SetDefaultFeePayload<T0 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string];
  }

  export interface SetEmergencyAdminPayload
    extends aptos.TypedEntryFunctionPayload<[Address]> {
    arguments_typed: [Address];
    type_arguments: [];
  }

  export interface SetFeeAdminPayload
    extends aptos.TypedEntryFunctionPayload<[Address]> {
    arguments_typed: [Address];
    type_arguments: [];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"global_config","friends":["0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool"],"exposed_functions":[{"name":"assert_valid_dao_fee","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":[]},{"name":"assert_valid_fee","visibility":"public","is_entry":false,"generic_type_params":[],"params":["u64"],"return":[]},{"name":"get_dao_admin","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["address"]},{"name":"get_default_dao_fee","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["u64"]},{"name":"get_default_fee","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]}],"params":[],"return":["u64"]},{"name":"get_emergency_admin","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["address"]},{"name":"get_fee_admin","visibility":"public","is_entry":false,"generic_type_params":[],"params":[],"return":["address"]},{"name":"initialize","visibility":"friend","is_entry":false,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"set_dao_admin","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","address"],"return":[]},{"name":"set_default_dao_fee","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","u64"],"return":[]},{"name":"set_default_fee","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_emergency_admin","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","address"],"return":[]},{"name":"set_fee_admin","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer","address"],"return":[]}],"structs":[{"name":"EventsStore","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"default_uncorrelated_fee_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::global_config::UpdateDefaultFeeEvent>"},{"name":"default_stable_fee_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::global_config::UpdateDefaultFeeEvent>"},{"name":"default_dao_fee_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::global_config::UpdateDefaultFeeEvent>"}]},{"name":"GlobalConfig","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"dao_admin_address","type":"address"},{"name":"emergency_admin_address","type":"address"},{"name":"fee_admin_address","type":"address"},{"name":"default_uncorrelated_fee","type":"u64"},{"name":"default_stable_fee","type":"u64"},{"name":"default_dao_fee","type":"u64"}]},{"name":"UpdateDefaultFeeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[],"fields":[{"name":"fee","type":"u64"}]}]}'
  );
}

export class liquidity_pool extends aptos.AptosBaseProcessor {
  constructor(options: aptos.AptosBindOptions) {
    super("liquidity_pool", options);
  }
  static DEFAULT_OPTIONS: aptos.AptosBindOptions = {
    address:
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12",
    network: aptos.AptosNetwork.MAIN_NET,
  };

  static bind(options: Partial<aptos.AptosBindOptions> = {}): liquidity_pool {
    return new liquidity_pool({
      ...liquidity_pool.DEFAULT_OPTIONS,
      ...options,
    });
  }

  onEntryInitialize(
    func: (
      call: liquidity_pool.InitializePayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): liquidity_pool {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "liquidity_pool::initialize",
    });
    return this;
  }

  onEntrySetDaoFee(
    func: (
      call: liquidity_pool.SetDaoFeePayload,
      ctx: aptos.AptosContext
    ) => void,
    filter?: aptos.CallFilter
  ): liquidity_pool {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "liquidity_pool::set_dao_fee",
    });
    return this;
  }

  onEntrySetFee(
    func: (call: liquidity_pool.SetFeePayload, ctx: aptos.AptosContext) => void,
    filter?: aptos.CallFilter
  ): liquidity_pool {
    this.onEntryFunctionCall(func, {
      ...filter,
      function: "liquidity_pool::set_fee",
    });
    return this;
  }

  onEventPoolCreatedEvent(
    func: (
      event: liquidity_pool.PoolCreatedEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): liquidity_pool {
    this.onEvent(func, {
      type: "liquidity_pool::PoolCreatedEvent",
    });
    return this;
  }

  onEventLiquidityAddedEvent(
    func: (
      event: liquidity_pool.LiquidityAddedEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): liquidity_pool {
    this.onEvent(func, {
      type: "liquidity_pool::LiquidityAddedEvent",
    });
    return this;
  }

  onEventLiquidityRemovedEvent(
    func: (
      event: liquidity_pool.LiquidityRemovedEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): liquidity_pool {
    this.onEvent(func, {
      type: "liquidity_pool::LiquidityRemovedEvent",
    });
    return this;
  }

  onEventSwapEvent(
    func: (
      event: liquidity_pool.SwapEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): liquidity_pool {
    this.onEvent(func, {
      type: "liquidity_pool::SwapEvent",
    });
    return this;
  }

  onEventFlashloanEvent(
    func: (
      event: liquidity_pool.FlashloanEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): liquidity_pool {
    this.onEvent(func, {
      type: "liquidity_pool::FlashloanEvent",
    });
    return this;
  }

  onEventOracleUpdatedEvent(
    func: (
      event: liquidity_pool.OracleUpdatedEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): liquidity_pool {
    this.onEvent(func, {
      type: "liquidity_pool::OracleUpdatedEvent",
    });
    return this;
  }

  onEventUpdateFeeEvent(
    func: (
      event: liquidity_pool.UpdateFeeEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): liquidity_pool {
    this.onEvent(func, {
      type: "liquidity_pool::UpdateFeeEvent",
    });
    return this;
  }

  onEventUpdateDAOFeeEvent(
    func: (
      event: liquidity_pool.UpdateDAOFeeEventInstance,
      ctx: aptos.AptosContext
    ) => void
  ): liquidity_pool {
    this.onEvent(func, {
      type: "liquidity_pool::UpdateDAOFeeEvent",
    });
    return this;
  }

  loadTypesInternal(registry: aptos.TypeRegistry) {
    loadAllTypes(registry);
  }
}

export namespace liquidity_pool {
  export class EventsStore<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::EventsStore";
    pool_created_handle: _0x1.event.EventHandle<
      liquidity_pool.PoolCreatedEvent<T0, T1, T2>
    >;
    liquidity_added_handle: _0x1.event.EventHandle<
      liquidity_pool.LiquidityAddedEvent<T0, T1, T2>
    >;
    liquidity_removed_handle: _0x1.event.EventHandle<
      liquidity_pool.LiquidityRemovedEvent<T0, T1, T2>
    >;
    swap_handle: _0x1.event.EventHandle<liquidity_pool.SwapEvent<T0, T1, T2>>;
    flashloan_handle: _0x1.event.EventHandle<
      liquidity_pool.FlashloanEvent<T0, T1, T2>
    >;
    oracle_updated_handle: _0x1.event.EventHandle<
      liquidity_pool.OracleUpdatedEvent<T0, T1, T2>
    >;
    update_fee_handle: _0x1.event.EventHandle<
      liquidity_pool.UpdateFeeEvent<T0, T1, T2>
    >;
    update_dao_fee_handle: _0x1.event.EventHandle<
      liquidity_pool.UpdateDAOFeeEvent<T0, T1, T2>
    >;
  }

  export class Flashloan<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::Flashloan";
    x_loan: bigint;
    y_loan: bigint;
  }

  export class FlashloanEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::FlashloanEvent";
    x_in: bigint;
    x_out: bigint;
    y_in: bigint;
    y_out: bigint;
  }

  export interface FlashloanEventInstance
    extends aptos.TypedEventInstance<FlashloanEvent<any, any, any>> {
    data_decoded: FlashloanEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class LiquidityAddedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::LiquidityAddedEvent";
    added_x_val: bigint;
    added_y_val: bigint;
    lp_tokens_received: bigint;
  }

  export interface LiquidityAddedEventInstance
    extends aptos.TypedEventInstance<LiquidityAddedEvent<any, any, any>> {
    data_decoded: LiquidityAddedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class LiquidityPool<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::LiquidityPool";
    coin_x_reserve: _0x1.coin.Coin<T0>;
    coin_y_reserve: _0x1.coin.Coin<T1>;
    last_block_timestamp: bigint;
    last_price_x_cumulative: bigint;
    last_price_y_cumulative: bigint;
    lp_mint_cap: _0x1.coin.MintCapability<
      _0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948.lp_coin.LP<
        T0,
        T1,
        T2
      >
    >;
    lp_burn_cap: _0x1.coin.BurnCapability<
      _0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948.lp_coin.LP<
        T0,
        T1,
        T2
      >
    >;
    x_scale: bigint;
    y_scale: bigint;
    locked: Boolean;
    fee: bigint;
    dao_fee: bigint;
  }

  export class LiquidityRemovedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::LiquidityRemovedEvent";
    returned_x_val: bigint;
    returned_y_val: bigint;
    lp_tokens_burned: bigint;
  }

  export interface LiquidityRemovedEventInstance
    extends aptos.TypedEventInstance<LiquidityRemovedEvent<any, any, any>> {
    data_decoded: LiquidityRemovedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class OracleUpdatedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::OracleUpdatedEvent";
    last_price_x_cumulative: bigint;
    last_price_y_cumulative: bigint;
  }

  export interface OracleUpdatedEventInstance
    extends aptos.TypedEventInstance<OracleUpdatedEvent<any, any, any>> {
    data_decoded: OracleUpdatedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class PoolAccountCapability {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::PoolAccountCapability";
    signer_cap: _0x1.account.SignerCapability;
  }

  export class PoolCreatedEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::PoolCreatedEvent";
    creator: Address;
  }

  export interface PoolCreatedEventInstance
    extends aptos.TypedEventInstance<PoolCreatedEvent<any, any, any>> {
    data_decoded: PoolCreatedEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class SwapEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::SwapEvent";
    x_in: bigint;
    x_out: bigint;
    y_in: bigint;
    y_out: bigint;
  }

  export interface SwapEventInstance
    extends aptos.TypedEventInstance<SwapEvent<any, any, any>> {
    data_decoded: SwapEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class UpdateDAOFeeEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::UpdateDAOFeeEvent";
    new_fee: bigint;
  }

  export interface UpdateDAOFeeEventInstance
    extends aptos.TypedEventInstance<UpdateDAOFeeEvent<any, any, any>> {
    data_decoded: UpdateDAOFeeEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export class UpdateFeeEvent<T0, T1, T2> {
    static TYPE_QNAME =
      "0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::UpdateFeeEvent";
    new_fee: bigint;
  }

  export interface UpdateFeeEventInstance
    extends aptos.TypedEventInstance<UpdateFeeEvent<any, any, any>> {
    data_decoded: UpdateFeeEvent<any, any, any>;
    type_arguments: [string, string, string];
  }

  export interface InitializePayload
    extends aptos.TypedEntryFunctionPayload<[]> {
    arguments_typed: [];
    type_arguments: [];
  }

  export interface SetDaoFeePayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string, string, string];
  }

  export interface SetFeePayload<T0 = any, T1 = any, T2 = any>
    extends aptos.TypedEntryFunctionPayload<[bigint]> {
    arguments_typed: [bigint];
    type_arguments: [string, string, string];
  }

  export function loadTypes(_r: aptos.TypeRegistry) {
    loadAllTypes(_r);
  }
  export const ABI: MoveModule = JSON.parse(
    '{"address":"0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12","name":"liquidity_pool","friends":[],"exposed_functions":[{"name":"burn","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948::lp_coin::LP<T0, T1, T2>>"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]},{"name":"flashloan","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["u64","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::Flashloan<T0, T1, T2>"]},{"name":"get_cumulative_prices","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u128","u128","u64"]},{"name":"get_dao_fee","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"get_dao_fees_config","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_decimals_scales","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_fee","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64"]},{"name":"get_fees_config","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"get_reserves_size","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["u64","u64"]},{"name":"initialize","visibility":"public","is_entry":true,"generic_type_params":[],"params":["&signer"],"return":[]},{"name":"is_pool_exists","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"is_pool_locked","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":[],"return":["bool"]},{"name":"mint","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"],"return":["0x1::coin::Coin<0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948::lp_coin::LP<T0, T1, T2>>"]},{"name":"pay_flashloan","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>","0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::Flashloan<T0, T1, T2>"],"return":[]},{"name":"register","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer"],"return":[]},{"name":"set_dao_fee","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"set_fee","visibility":"public","is_entry":true,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["&signer","u64"],"return":[]},{"name":"swap","visibility":"public","is_entry":false,"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"params":["0x1::coin::Coin<T0>","u64","0x1::coin::Coin<T1>","u64"],"return":["0x1::coin::Coin<T0>","0x1::coin::Coin<T1>"]}],"structs":[{"name":"EventsStore","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"pool_created_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::PoolCreatedEvent<T0, T1, T2>>"},{"name":"liquidity_added_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::LiquidityAddedEvent<T0, T1, T2>>"},{"name":"liquidity_removed_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::LiquidityRemovedEvent<T0, T1, T2>>"},{"name":"swap_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::SwapEvent<T0, T1, T2>>"},{"name":"flashloan_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::FlashloanEvent<T0, T1, T2>>"},{"name":"oracle_updated_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::OracleUpdatedEvent<T0, T1, T2>>"},{"name":"update_fee_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::UpdateFeeEvent<T0, T1, T2>>"},{"name":"update_dao_fee_handle","type":"0x1::event::EventHandle<0x190d44266241744264b964a37b8f09863167a12d3e70cda39376cfb4e3561e12::liquidity_pool::UpdateDAOFeeEvent<T0, T1, T2>>"}]},{"name":"Flashloan","is_native":false,"abilities":[],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"x_loan","type":"u64"},{"name":"y_loan","type":"u64"}]},{"name":"FlashloanEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"x_in","type":"u64"},{"name":"x_out","type":"u64"},{"name":"y_in","type":"u64"},{"name":"y_out","type":"u64"}]},{"name":"LiquidityAddedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"added_x_val","type":"u64"},{"name":"added_y_val","type":"u64"},{"name":"lp_tokens_received","type":"u64"}]},{"name":"LiquidityPool","is_native":false,"abilities":["key"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"coin_x_reserve","type":"0x1::coin::Coin<T0>"},{"name":"coin_y_reserve","type":"0x1::coin::Coin<T1>"},{"name":"last_block_timestamp","type":"u64"},{"name":"last_price_x_cumulative","type":"u128"},{"name":"last_price_y_cumulative","type":"u128"},{"name":"lp_mint_cap","type":"0x1::coin::MintCapability<0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948::lp_coin::LP<T0, T1, T2>>"},{"name":"lp_burn_cap","type":"0x1::coin::BurnCapability<0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948::lp_coin::LP<T0, T1, T2>>"},{"name":"x_scale","type":"u64"},{"name":"y_scale","type":"u64"},{"name":"locked","type":"bool"},{"name":"fee","type":"u64"},{"name":"dao_fee","type":"u64"}]},{"name":"LiquidityRemovedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"returned_x_val","type":"u64"},{"name":"returned_y_val","type":"u64"},{"name":"lp_tokens_burned","type":"u64"}]},{"name":"OracleUpdatedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"last_price_x_cumulative","type":"u128"},{"name":"last_price_y_cumulative","type":"u128"}]},{"name":"PoolAccountCapability","is_native":false,"abilities":["key"],"generic_type_params":[],"fields":[{"name":"signer_cap","type":"0x1::account::SignerCapability"}]},{"name":"PoolCreatedEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"creator","type":"address"}]},{"name":"SwapEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"x_in","type":"u64"},{"name":"x_out","type":"u64"},{"name":"y_in","type":"u64"},{"name":"y_out","type":"u64"}]},{"name":"UpdateDAOFeeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"new_fee","type":"u64"}]},{"name":"UpdateFeeEvent","is_native":false,"abilities":["drop","store"],"generic_type_params":[{"constraints":[]},{"constraints":[]},{"constraints":[]}],"fields":[{"name":"new_fee","type":"u64"}]}]}'
  );
}

export function loadAllTypes(_r: aptos.TypeRegistry) {
  _0x1.loadAllTypes(_r);
  _0x5a97986a9d031c4567e15b797be516910cfcb4156312482efc6a19c0a30c948.loadAllTypes(
    _r
  );

  _r.load(math.ABI);
  _r.load(curves.ABI);
  _r.load(router.ABI);
  _r.load(scripts.ABI);
  _r.load(emergency.ABI);
  _r.load(router_v2.ABI);
  _r.load(lp_account.ABI);
  _r.load(scripts_v2.ABI);
  _r.load(coin_helper.ABI);
  _r.load(dao_storage.ABI);
  _r.load(stable_curve.ABI);
  _r.load(global_config.ABI);
  _r.load(liquidity_pool.ABI);
}
